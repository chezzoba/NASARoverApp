import "source-map-support/register";
import { Model } from "./Model";
import { Schema, SchemaDefinition } from "./Schema";
import { Condition } from "./Condition";
import { Document } from "./Document";
interface ModelDocumentConstructor<T extends Document> {
    new (object: {
        [key: string]: any;
    }): T;
}
declare const _default: {
    model: {
        <T extends Document>(name: string, schema?: SchemaDefinition | Schema, options?: Partial<import("./Model").ModelOptions>): T & Model<T> & ModelDocumentConstructor<T>;
        defaults: any;
    };
    Schema: typeof Schema;
    Condition: typeof Condition;
    transaction: (transactions: any[], settings: import("./Transaction").TransactionSettings, callback: import("./General").CallbackType<any, any>) => any;
    aws: {
        sdk: typeof import("aws-sdk");
        ddb: typeof import("./aws/ddb");
        converter: typeof import("./aws/converter");
    };
    logger: {
        pause: () => void;
        resume: () => void;
        status: () => "active" | "paused";
        providers: {
            set: (provider: any) => void;
            clear: () => void;
            add: (provider: any) => void;
            delete: (id: string | string[]) => void;
            list: () => any[];
        };
    };
    UNDEFINED: symbol;
};
export = _default;
